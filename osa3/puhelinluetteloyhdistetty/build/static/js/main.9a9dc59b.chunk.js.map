{"version":3,"sources":["App.js","services/notes.js","index.js"],"names":["globalErrorFunc","errorIsHappening","baseUrl","axios","get","newObject","post","id","put","delete","PersonForm","props","newName","newNumber","persons","setPersons","setNewName","setNewNumber","UInollaus","RefreshPersons","onSubmit","event","preventDefault","personObject","name","number","personIndex","map","person","indexOf","noteService","then","catch","error","response","data","window","confirm","value","onChange","target","type","PrintPerson","onClick","Persons","searchString","filter","toUpperCase","search","key","Filter","setSearchString","setFunc","ErrorMessages","message","setTimeout","errorStyle","mauste","className","App","useState","errorMesasge","setErrorMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a9dc59b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport noteService from './services/notes'\r\n\r\nconst PersonForm = (props) => {\r\n  let newName = props.newName\r\n  let newNumber = props.newNumber\r\n  let persons = props.persons\r\n  \r\n  let setPersons   = props.setPersons\r\n  let setNewName   = props.setNewName\r\n  let setNewNumber = props.setNewNumber\r\n\r\n  const UInollaus = () => {\r\n    setNewName('')\r\n    setNewNumber('')\r\n    RefreshPersons(setPersons)\r\n  }\r\n\r\n  const addPerson = (event) =>{\r\n    event.preventDefault()\r\n    const personObject = {\r\n        name:newName,\r\n        number:newNumber\r\n    }\r\n    let personIndex = persons.map(person=>person.name).indexOf(newName)\r\n    if( personIndex === -1 && newName !== ''){\r\n        noteService\r\n          .create(personObject)\r\n          .then( () => {\r\n            UInollaus()\r\n            errorIsHappening=0\r\n            globalErrorFunc(`Added ${newName}`)\r\n          }).catch(error=>{\r\n            errorIsHappening=1\r\n            globalErrorFunc(error.response.data.error)\r\n          })\r\n    }else{\r\n        if(newName===''){\r\n          errorIsHappening=1\r\n          globalErrorFunc('Namefield is empty!')\r\n        }else if( persons[personIndex].number === newNumber ){\r\n          //alert(`${newName} is already added to phonebook`)\r\n          errorIsHappening=1\r\n          globalErrorFunc(`${newName} is already added to phonebook`)\r\n          setNewName('')\r\n          setNewNumber('')\r\n        }else{\r\n          errorIsHappening=0\r\n          if( window.confirm(`${newName} numero p√§ivitet√§√§n -> ${newNumber}`) ){\r\n            noteService\r\n            .update( persons[personIndex].id, personObject )\r\n            .then( () => {\r\n              UInollaus()\r\n            })\r\n            errorIsHappening=0\r\n            globalErrorFunc(`The number of ${newName} has been updated`)\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) =>{\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handleNumberChange = (event) =>{\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n    <div>\r\n      name: <input value={newName} onChange={handleNameChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={newNumber} onChange={handleNumberChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PrintPerson = (props) => {\r\n  let person = props.person\r\n  let setPersons = props.setPersons\r\n\r\n  const deletionError = () => {\r\n    errorIsHappening=1;\r\n    globalErrorFunc(`Information of ${person.name} has already been removed from server`)\r\n  }\r\n\r\n  const deletionSuccess = () => {\r\n    errorIsHappening=0;\r\n    globalErrorFunc('Entry removal successful')\r\n  }\r\n\r\n  const deletePerson = () =>{\r\n    if(window.confirm(`${person.name} poistetaan`))\r\n    noteService.deleteEntry(person.id)\r\n      .then( () => {\r\n        RefreshPersons(setPersons)\r\n        deletionSuccess() })\r\n      .catch( () => {\r\n        RefreshPersons(setPersons)\r\n        deletionError()\r\n      })\r\n  }\r\n  return(\r\n    <>\r\n    <li>\r\n      {person.name} {person.number}\r\n      <button onClick={deletePerson}>\r\n        delete\r\n      </button>\r\n    </li>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Persons = (props) => {\r\n    const persons = props.persons\r\n    const searchString = props.searchString\r\n    const setPersons = props.setPersons\r\n    return (\r\n        <>\r\n        {persons.filter(person=>person.name.toUpperCase().search(searchString.toUpperCase())===0).map(person=><PrintPerson key={person.id} person={person} setPersons={setPersons}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  const handleSearch = (event) =>{\r\n    props.setSearchString(event.target.value)\r\n  }\r\n  return(\r\n    <div>\r\n      filter shown with <input value={props.searchString} onChange={handleSearch} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RefreshPersons = (setFunc) => {\r\n  noteService.getAll()\r\n  .then( response => {\r\n    setFunc(response.data)\r\n  })\r\n}\r\n\r\nconst ErrorMessages = ({message}) => {\r\n  if( message === null ){\r\n    errorIsHappening=0\r\n    return null\r\n  }\r\n  setTimeout( ()=> {\r\n    globalErrorFunc(null)\r\n  },3000)\r\n  let errorStyle=\"nonerror\"\r\n  let mauste=\"üëç\"\r\n  if(errorIsHappening){\r\n    errorStyle=\"error\"\r\n    mauste=\"Velhomeditaatio\"\r\n  }\r\n  return (\r\n    <div className=\"errorContainer\">\r\n      <div className={errorStyle}>\r\n        {message}<br/>\r\n        {mauste}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet globalErrorFunc,errorIsHappening\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchString, setSearchString ] = useState('')\r\n  const [ errorMesasge, setErrorMessage ] = useState(null)\r\n\r\n  useEffect( ()=>{\r\n    RefreshPersons(setPersons)\r\n  },[])\r\n\r\n  globalErrorFunc = setErrorMessage\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <ErrorMessages message={errorMesasge}/>\r\n      <h2>Phonebook</h2>\r\n      <Filter searchString={searchString} setSearchString={setSearchString} />\r\n      <h3>Add new</h3>\r\n      <PersonForm \r\n        newName   = {newName}\r\n        newNumber = {newNumber}\r\n        persons   = {persons}\r\n        setPersons   = {setPersons}\r\n        setNewName   = {setNewName}\r\n        setNewNumber = {setNewNumber}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} searchString={searchString} setPersons={setPersons}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import axios from 'axios'\r\n\r\n//const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deleteEntry = id => {\r\n    return axios.delete(baseUrl+'/'+id)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(baseUrl+'/'+id,newObject)\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    deleteEntry: deleteEntry\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}